@page "/loginmodels/admin"
@using Microsoft.EntityFrameworkCore
@using KanbanMBC.Components.Models
@inject IDbContextFactory<KanbanMBC.Data.KanbanMBCContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Admin Login</PageTitle>

<div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="card shadow-lg p-4" style="width: 400px;">
        <h3 class="text-center">Admin Login</h3>
        <hr />
        <EditForm method="post" Model="LoginModel" OnValidSubmit="AddLoginModel" FormName="create" class="needs-validation" novalidate>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div class="mb-3">
                <label for="Username" class="form-label">User Name:</label>
                <InputText id="Username" @bind-Value="LoginModel.Username" class="form-control" placeholder="Enter username" />
                <ValidationMessage For="() => LoginModel.Username" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">Password:</label>
                <InputText id="password" @bind-Value="LoginModel.Password" type="password" class="form-control" placeholder="Enter password" />
                <ValidationMessage For="() => LoginModel.Password" class="text-danger" />
            </div>

            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger" role="alert">@ErrorMessage</div>
            }

            <button type="submit" class="btn btn-primary w-100">Login</button>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private LoginModel LoginModel { get; set; } = new();

    private string? ErrorMessage { get; set; }

    private async Task AddLoginModel()
    {
        if (LoginModel.Username == "Admin" && LoginModel.Password == "Admin@123@345")
        {
            await InvokeAsync(() => NavigationManager.NavigateTo("/fredderassigns"));
        }
        else
        {
            ErrorMessage = "Invalid username or password.";
        }
    }
}
