@page "/logins/TL"
@using Microsoft.EntityFrameworkCore
@using KanbanMBC.Components.Models
@inject IDbContextFactory<KanbanMBC.Data.KanbanMBCContext> DbFactory
@inject NavigationManager NavigationManager
<head>
    <style>
        body {
            background-image: url("backo2.jpg");
            background-size: cover;
            background-position:center;
            background-origin:content-box;
            background-repeat: no-repeat;
            height: 100vh;
            
        }
    </style>
</head>
<!-- If not already referenced in your layout or index.html,
     include Bootstrap 5 and (optionally) Bootstrap Icons: -->
<link rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      integrity="sha384-ENjdO4Dr2bkBIFxQpeoMoF7wLaH9z0j34CYIH3/612No67cK9v1wK9aAD5KZ0IHe"
      crossorigin="anonymous" />

<link rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />

<PageTitle>Create Login</PageTitle>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-black text-white">
                    <!-- Add an icon, if desired -->
                    <h3 class="mb-0">
                        <i class="bi bi-person"></i> Team Leader
                    </h3>
                </div>
                <div class="card-body">
<EditForm method="post" Model="Login" OnValidSubmit="AddLogin" FormName="Create">
    <DataAnnotationsValidator />
    <ValidationSummary class="text-danger" role="alert" />

    <div class="mb-3">
        <label for="modules" class="form-label fw-bold">Modules</label>
        <InputSelect id="modules" @bind-Value="Login.MODULES" class="form-select">
            <option value="">-- Select Module --</option>
                                @foreach (var module in Modules)
                                {
                    <option value="@module.MODULE">@module.MODULE</option>
                                }
        </InputSelect>
        <ValidationMessage For="() => Login.MODULES" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="heads" class="form-label fw-bold">Shift</label>
        <InputSelect id="heads" @bind-Value="Login.Heads" class="form-select">
            <option value="">-- Select Shift --</option>
            <option value="A">A</option>
            <option value="B">B</option>
        </InputSelect>
        <ValidationMessage For="() => Login.Heads" class="text-danger" />
    </div>

    <div class="d-flex justify-content-end">
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-person-check me-1"></i>
            Submit
        </button>
    </div>
</EditForm>

                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private Login Login { get; set; } = new();
    private List<Dataset> Modules { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await using var context = await DbFactory.CreateDbContextAsync();
        Modules = await context.Dataset
            .AsNoTracking()
            .Select(d => new Dataset { MODULE = d.MODULE })
            .Distinct()
            .ToListAsync();
    }

    private async Task AddLogin()
    {
        Login.Date = DateTime.UtcNow;

        await using var context = await DbFactory.CreateDbContextAsync();
        context.Login.Add(Login);
        await context.SaveChangesAsync();

        // Navigate to your next page with query parameters:
        NavigationManager.NavigateTo($"/pullrequests/create?module={Login.MODULES}&shift={Login.Heads}");
    }
}

